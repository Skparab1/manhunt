{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///Users/deepikadasari/Documents/Abhi/Projects/manhunt/app/utils/supabase-auth.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\n// const supabaseAdmin = createClient(\n//     process.env.NEXT_PUBLIC_SUPABASE_URL, \n//     process.env.SERVICE_ROLE, {\n//   auth: {\n//     autoRefreshToken: false,\n//     persistSession: false\n//   }\n// })\n\n// // // Access auth admin api\n// // const adminAuthClient = supabaseAdmin.auth.admin\n\n// export default supabaseAdmin;\n\nexport default async function createSupbaseServerClient() {\n\treturn createClient(\n      process.env.NEXT_PUBLIC_SUPABASE_URL || \"\", \n      process.env.SERVICE_ROLE || \"\")\n}\n\nexport async function getUsers() {\n  const supabaseAdmin = await createSupbaseServerClient();\n  const adminAuthClient = supabaseAdmin.auth.admin;\n\n  const { data: { users }, error } = await adminAuthClient.listUsers()\n\n  let userList1: string[] = [];\n  users?.forEach((user) => {\n      if (user.email) {\n          userList1.push(user.email);\n      }\n  })\n\n  console.log(userList1 +\" users\");\n\n  return userList1;\n}\n"],"names":[],"mappings":";;;;AAAA;;AAgBe,eAAe;IAC7B,OAAO,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EACb,gFAAwC,IACxC,QAAQ,GAAG,CAAC,YAAY,IAAI;AAClC;AAEO,eAAe;IACpB,MAAM,gBAAgB,MAAM;IAC5B,MAAM,kBAAkB,cAAc,IAAI,CAAC,KAAK;IAEhD,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,MAAM,gBAAgB,SAAS;IAElE,IAAI,YAAsB,EAAE;IAC5B,OAAO,QAAQ,CAAC;QACZ,IAAI,KAAK,KAAK,EAAE;YACZ,UAAU,IAAI,CAAC,KAAK,KAAK;QAC7B;IACJ;IAEA,QAAQ,GAAG,CAAC,YAAW;IAEvB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///Users/deepikadasari/Documents/Abhi/Projects/manhunt/app/admin/userList.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/admin/userList.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/admin/userList.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0R,GACvT,wDACA","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///Users/deepikadasari/Documents/Abhi/Projects/manhunt/app/admin/userList.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/admin/userList.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/admin/userList.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsQ,GACnS,oCACA","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///Users/deepikadasari/Documents/Abhi/Projects/manhunt/app/admin/page.tsx"],"sourcesContent":["import { getUsers } from \"../utils/supabase-auth\";\n\nimport UserList from \"./userList\";\n\nimport supabase from \"../utils/supabase\";\n\nexport default async function HomePage() {\n    async function clientFetchUsers() {\n        let userListFinal = await getUsers();\n        console.log(\"jabari\");\n        console.log(userListFinal);\n        return userListFinal;\n    }\n\n    let users = await clientFetchUsers();\n\n\n    return (\n        <>\n\n            <div className=\"w-full bg-slate-800 dark:bg-[rgb(20,77,128)] text-white h-10 absolute t-0\">\n                <h1 className=\"absolute l-0 m-2\">Manhunt â€¢ ADMIN</h1>\n                \n            </div>\n            <div className=\"grid grid-rows-[20px_1fr_20px] items-center justify-items-center min-h-screen p-8 gap-16 sm:p-20 font-[family-name:var(--font-geist-sans)] bg-stone-300 dark:bg-neutral-900\">\n                <main className=\"flex flex-col gap-[32px] row-start-2 items-center sm:items-start\">\n\n                <UserList users={users || []} />\n\n                </main>\n                <footer className=\"row-start-3 flex gap-[24px] flex-wrap items-center justify-center\">\n                \n                </footer>\n            </div>\n        </>\n    );\n}\n\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAIe,eAAe;IAC1B,eAAe;QACX,IAAI,gBAAgB,MAAM,CAAA,GAAA,gIAAA,CAAA,WAAQ,AAAD;QACjC,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CAAC;QACZ,OAAO;IACX;IAEA,IAAI,QAAQ,MAAM;IAGlB,qBACI;;0BAEI,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAG,WAAU;8BAAmB;;;;;;;;;;;0BAGrC,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAK,WAAU;kCAEhB,cAAA,8OAAC,yHAAA,CAAA,UAAQ;4BAAC,OAAO,SAAS,EAAE;;;;;;;;;;;kCAG5B,8OAAC;wBAAO,WAAU;;;;;;;;;;;;;;AAMlC","debugId":null}}]
}