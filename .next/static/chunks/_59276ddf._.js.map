{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/deepikadasari/Documents/Abhi/Projects/manhunt/app/utils/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nexport default createClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL || '',\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || ''\n);\n"],"names":[],"mappings":";;;AAGI;AAHJ;;uCAEe,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EACtB,gFAAwC,IACxC,wPAA6C","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/deepikadasari/Documents/Abhi/Projects/manhunt/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file:///Users/deepikadasari/Documents/Abhi/Projects/manhunt/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD;IACpD,qBACE,6LAAC,uKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIlE;KArBS","debugId":null}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///Users/deepikadasari/Documents/Abhi/Projects/manhunt/app/realtime/realtime-stream.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\";\n\nimport supabase from \"./../utils/supabase\";\n\nimport type { Session } from '@supabase/supabase-js'\n\nimport { Progress } from \"@/components/ui/progress\";\n\nimport generateChallenge from \"../utils/manhunt\";\n\ntype Hunt = {\n    id: number;\n    created_at: string;\n    runners: string[];\n    hunters: string[];\n}\n\nexport default function RealtimeStream({serverData} : {serverData: Hunt[]}) { \n\n    const [hunts, setHunts] = useState<Hunt[]>(serverData);\n\n    const [huntTime, setHuntTime] = useState<number>();\n\n    const [indexToUse, setIndexToUse] = useState<number>(hunts.length-1);\n\n\n    useEffect(() => {\n        supabase.channel(\"realtimestream:hunts-stream\").on(\"postgres_changes\", {\n            event: \"INSERT\",\n            schema: \"public\",\n            table: \"hunts\"\n        }, (payload: { new: Hunt }) => {\n            console.log({payload});\n\n            setHunts(prevHunts => [...prevHunts, payload.new]);\n\n            setIndexToUse(prevIndex => prevIndex + 1);\n\n            location.reload();\n\n        }).subscribe();\n\n        return () => {\n            // supabase.removeChannel(\"realtime stream\");\n        }\n\n    }, []);\n\n\n    \n\n    const [session, setSession] = useState<Session | null>(null);\n\n    useEffect(() => {\n        let isMounted = true;\n\n        supabase.auth.getSession().then(({ data: { session } }) => {\n            if (isMounted) setSession(session);\n        });\n\n        const {\n            data: { subscription },\n        } = supabase.auth.onAuthStateChange((_event, session) => {\n            if (isMounted) setSession(session);\n        });\n\n        return () => {\n            isMounted = false;\n            subscription.unsubscribe();\n        };\n    }, []);\n\n    const seconds_interval = 0.1 * 1000;\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n\n            const sT = hunts[indexToUse].created_at;\n            const startTime = new Date(sT);\n\n            if (startTime) {\n                // console.log(\"Interval running inside\");\n\n                const currentTime = new Date();\n                const timeDiff = Math.floor((currentTime.valueOf() - startTime.valueOf()) / 1000);\n\n                // console.log(\"Time diff: \", timeDiff);\n                setHuntTime(timeDiff);\n            }\n\n            // console.log(\"Interval running\");\n\n        }, seconds_interval);\n        return () => clearInterval(interval);\n    }, [])\n\n    return (\n\n        <div className=\"-mt-17 text-center text-red-700\">\n            {hunts.length > 0 && session?.user.email && hunts[hunts.length-1].runners ? (\n                hunts[hunts.length - 1].runners.includes(session.user.email) ? (\n\n                    <h1 className=\"text-5xl font-bold mb-4\">Run!</h1>\n                ) : hunts[hunts.length - 1].hunters.includes(session.user.email) ? (\n\n                    <h1 className=\"text-5xl font-bold\">Hunt!</h1>\n                ) : (\n                    <h1 className=\"text-5xl font-bold\">Spectate!</h1>\n                )\n            ) : null}\n\n            {hunts.length > 0 ? (\n                <div>\n                    { (huntTime !== undefined && huntTime < 180) ? (\n                        <>\n                            <h1>Hunting begins in: {String(Math.floor((180-huntTime)/60))}m {String((180-huntTime)%60)}s</h1>\n                            <Progress value={huntTime*100/180} />\n                        </>\n                    ) : huntTime !== undefined && huntTime < 1800 ? (\n                        <>\n                            <h1>Time until turnover: {String(Math.floor((1800-huntTime)/60))}m {String((1800-huntTime)%60)}s</h1>\n                            <Progress value={huntTime*100/1800} />\n                        </>\n                    ) : huntTime !== undefined ? (\n                        <h1>Hunt elapsed</h1>\n                    ) :(\n                        <h1>Loading time...</h1>\n                    )}\n\n                    { huntTime !== undefined && huntTime < 1800 ? (\n                        <>\n                        <h1 className=\"mt-8 font-bold\">Hunters:</h1>\n                            {hunts[hunts.length-1].runners &&\n                                <>\n                                {hunts[hunts.length-1].hunters.map((hunter, index) => (\n                                    hunter === session?.user.email ? (\n                                        <h4 key={index}>You</h4>\n                                    ) : (\n                                        <h4 key={index}>{hunter}</h4>\n                                    )\n                                ))}\n                                </>\n                            }\n                        <h1 className=\"font-bold\">Runners: </h1>  \n                        {hunts[hunts.length-1].runners &&\n                        <>\n                            {hunts[hunts.length-1].runners.map((runner, index) => (\n                                runner === session?.user.email ? (\n                                    <h4 key={index}>You</h4> \n                                ) : (\n                                    <h4 key={index}>{runner}</h4> \n                                )\n                            ))}\n                        </>\n                        }   \n                        </>\n                    ) : (\n                        <>\n                        <h1>Runners</h1>  \n\n                            {hunts[hunts.length-1].runners &&\n                                <>\n                                    {hunts[hunts.length-1].runners.map((runner: string, index: number) => (\n                                        runner === session?.user.email ? (\n                                            <h2 key={index} className=\"m-2\">You</h2>\n                                        ) : (\n                                            <h2 key={index} className=\"m-2\">{runner}</h2> \n                                        )\n                                    ))} have completed their run.\n                                </>\n                            }\n\n                        </>\n                    )}           \n                </div>\n            ) : (\n                <h1>No hunts available</h1>\n            )}\n        </div>\n    );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 377, "column": 0}, "map": {"version":3,"sources":["file:///Users/deepikadasari/Documents/Abhi/Projects/manhunt/app/realtime/realtime-points.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\";\n\nimport supabase from \"../utils/supabase\";\n\nimport type { Session } from '@supabase/supabase-js'\n\nimport generateChallenge from \"../utils/manhunt\";\n\n\nexport default function PointsStream({ pointsArr }: { pointsArr: [string, number][] }) { \n\n    const [points, setPoints] = useState<[string, number][]>(pointsArr);\n\n    useEffect(() => {\n        setPoints(pointsArr);\n    }, [pointsArr]);\n\n\n    useEffect(() => {\n        const channel = supabase.channel(\"realtimestream:points-stream\").on(\n            \"postgres_changes\",\n            {\n                event: \"UPDATE\",\n                schema: \"public\",\n                table: \"points\"\n            },\n            (payload: { new: any }) => {\n                console.log({ payload });\n                console.log(\"JABARI\",payload.new, points.length);\n\n\n                // lets just ignore the payload for now, and get the points\n\n                supabase\n                    .from(\"points\")\n                    .select()\n                    .then(({ data }) => {\n            \n                    if (data && data.length > 0) {\n                        setPoints(data.map((item: any) => [item.user, item.points]));\n                    } else {\n                        setPoints([]);\n                    }\n            \n                    // console.log(\"Everyone points: \", everyonePoints);\n                });\n\n\n                // console.log(\"JABARI\",points);\n\n                // setPoints(prevPoints => {\n                //     const userIndex = prevPoints.findIndex(([user]) => user === payload.new.user);\n\n                //     if (userIndex !== -1) {\n                //         const updatedPoints = [...prevPoints];\n                //         updatedPoints[userIndex] = [payload.new.user, payload.new.points];\n                //         return updatedPoints;\n                //     } else {\n                //         return [...prevPoints, [payload.new.user, payload.new.points]];\n                //     }\n                // });\n\n                // let i = 0;\n                // let found = false\n                // while (i < points.length) {\n                //     console.log(points[i][0], payload.new.user);\n                //     if (points[i][0] === payload.new.user) {\n                //         updatedPoints.push([points[i][0], payload.new.points]);\n                //         found = true;\n                //     } else {\n                //         updatedPoints.push(points[i]);\n                //     }\n                //     i += 1;\n                // }\n\n                // if (!found) {\n                //     updatedPoints.push([payload.new.user, payload.new.points]);\n                // }\n\n                // console.log(\"JABARI\",updatedPoints);\n\n                // setPoints(updatedPoints);\n            }\n        ).subscribe();\n\n        return () => {\n            channel.unsubscribe();\n        };\n    }, []);\n\n    const [session, setSession] = useState<Session | null>(null);\n\n    useEffect(() => {\n        let isMounted = true;\n\n        supabase.auth.getSession().then(({ data: { session } }) => {\n            if (isMounted) setSession(session);\n        });\n\n        const {\n            data: { subscription },\n        } = supabase.auth.onAuthStateChange((_event, session) => {\n            if (isMounted) setSession(session);\n        });\n\n        return () => {\n            isMounted = false;\n            subscription.unsubscribe();\n        };\n    }, []);\n\n    const seconds_interval = 0.1 * 1000;\n\n    return (\n        <div className=\"m-4\">\n            <h1 className=\"text-2xl font-bold text-center\">Points</h1>\n            <div className=\"flex flex-col gap-4\">\n                {points.map((point: [string, number], index: number) => (\n                    (point[0] != session?.user.email ?\n                        (<div key={index} className=\"flex items-center justify-between p-4 border-b\">\n                            <span className=\"mr-4\">{point[0]}</span>\n                            <span>{point[1]}</span>\n                        </div>) : (\n                        <div key={index} className=\"flex items-center justify-between p-4 border-b\">\n                            <span className=\"mr-4\">You</span>\n                            <span>{point[1]}</span>\n                        </div>\n                        ))\n                ))}\n            </div>\n        </div>\n    );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 571, "column": 0}, "map": {"version":3,"sources":["file:///Users/deepikadasari/Documents/Abhi/Projects/manhunt/app/realtime/realtime-currentchallenge.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\";\n\nimport supabase from \"../utils/supabase\";\n\nimport type { Session } from '@supabase/supabase-js'\n\nimport {toast} from \"sonner\";\n\nexport default function CurrentChallengeStream({ theChallenge }: { theChallenge: [string, number]}) { \n\n    const [currentChallenge, setCurrentChallenge] = useState<[string, number]>(theChallenge);\n\n    useEffect(() => {\n        setCurrentChallenge(theChallenge);\n    }, [theChallenge]);\n\n    useEffect(() => {\n        const channel = supabase.channel(\"realtimestream:drawntasks-stream\").on(\"postgres_changes\", {\n            event: \"INSERT\",\n            schema: \"public\",\n            table: \"drawntasks\"\n        }, (payload: { new: any }) => {\n            console.log({payload});\n\n            console.log(payload.new);\n\n            setCurrentChallenge([payload.new.task, payload.new.points]);\n\n            // toast(\"Runners drew a task!\")\n            // alert(currentChallenge[0] + \" has been drawn!\");\n\n        }).subscribe();\n\n        return () => {\n            supabase.removeChannel(channel);\n        }\n\n    }, []);\n\n\n    useEffect(() => {\n        const channel = supabase.channel(\"realtimestream:drawntasks-stream-delete\").on(\"postgres_changes\", {\n            event: \"DELETE\",\n            schema: \"public\",\n            table: \"drawntasks\"\n        }, (payload: { old: any }) => {\n            // The deleted row data is in payload.old, not payload.new\n            setCurrentChallenge([\"\", 0]);\n        }).subscribe();\n\n        return () => {\n            supabase.removeChannel(channel);\n        }\n    }, []);\n\n    return (\n        <div className=\"m-4 mt-10\">\n            {currentChallenge[0] != \"\" &&\n            (<>\n                <h1 className=\"text-2xl font-bold text-center mt-8\">Runners' current challenge</h1>\n\n                <div className={\"bg-blue-400 p-4 rounded-md text-center\"}>\n                    <h2>{currentChallenge[0]}</h2>\n                    <h2 className=\"font-bold\">{currentChallenge[1]} points</h2>\n                </div>\n\n            </>)}\n        </div>\n    );\n}"],"names":[],"mappings":";;;;AAEA;AAEA;;;AAJA;;;AAUe,SAAS,uBAAuB,EAAE,YAAY,EAAqC;;IAE9F,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAoB;IAE3E,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;4CAAE;YACN,oBAAoB;QACxB;2CAAG;QAAC;KAAa;IAEjB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;4CAAE;YACN,MAAM,UAAU,2HAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,oCAAoC,EAAE,CAAC,oBAAoB;gBACxF,OAAO;gBACP,QAAQ;gBACR,OAAO;YACX;4DAAG,CAAC;oBACA,QAAQ,GAAG,CAAC;wBAAC;oBAAO;oBAEpB,QAAQ,GAAG,CAAC,QAAQ,GAAG;oBAEvB,oBAAoB;wBAAC,QAAQ,GAAG,CAAC,IAAI;wBAAE,QAAQ,GAAG,CAAC,MAAM;qBAAC;gBAE1D,gCAAgC;gBAChC,mDAAmD;gBAEvD;2DAAG,SAAS;YAEZ;oDAAO;oBACH,2HAAA,CAAA,UAAQ,CAAC,aAAa,CAAC;gBAC3B;;QAEJ;2CAAG,EAAE;IAGL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;4CAAE;YACN,MAAM,UAAU,2HAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,2CAA2C,EAAE,CAAC,oBAAoB;gBAC/F,OAAO;gBACP,QAAQ;gBACR,OAAO;YACX;4DAAG,CAAC;oBACA,0DAA0D;oBAC1D,oBAAoB;wBAAC;wBAAI;qBAAE;gBAC/B;2DAAG,SAAS;YAEZ;oDAAO;oBACH,2HAAA,CAAA,UAAQ,CAAC,aAAa,CAAC;gBAC3B;;QACJ;2CAAG,EAAE;IAEL,qBACI,6LAAC;QAAI,WAAU;kBACV,gBAAgB,CAAC,EAAE,IAAI,oBACvB;;8BACG,6LAAC;oBAAG,WAAU;8BAAsC;;;;;;8BAEpD,6LAAC;oBAAI,WAAW;;sCACZ,6LAAC;sCAAI,gBAAgB,CAAC,EAAE;;;;;;sCACxB,6LAAC;4BAAG,WAAU;;gCAAa,gBAAgB,CAAC,EAAE;gCAAC;;;;;;;;;;;;;;;;;;;;AAMnE;GA7DwB;KAAA","debugId":null}},
    {"offset": {"line": 701, "column": 0}, "map": {"version":3,"sources":["file:///Users/deepikadasari/Documents/Abhi/Projects/manhunt/app/realtime/realtime-alltasks.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\";\n\nimport supabase from \"../utils/supabase\";\n\nimport type { Session } from '@supabase/supabase-js'\n\nimport { toast } from \"sonner\"\n\n\nexport default function AllTasksStream({ theChallenge }: { theChallenge: [string, number, number][]}) { \n\n    const [allChallenges, setAllChallenges] = useState<[string, number, number][]>(theChallenge);\n\n    const [ptask, setPtask] = useState<string>(\"\");\n\n    useEffect(() => {\n        setAllChallenges(prev => prev.length === 0 ? theChallenge : prev);\n    }, [theChallenge]);\n\n    useEffect(() => {\n        const channel = supabase.channel(\"realtimestream:alltasks-stream\").on(\"postgres_changes\", {\n            event: \"INSERT\",\n            schema: \"public\",\n            table: \"tasks\"\n        }, (payload: { new: any }) => {\n            console.log({payload});\n\n            console.log(payload.new);\n\n            console.log(\"<\" + ptask + \"> <\" + String(payload.new.task) + \">\");\n\n            \n            setAllChallenges(prevChallenges => {\n                if (\n                    prevChallenges.length === 0 ||\n                    prevChallenges[prevChallenges.length - 1][0] !== payload.new.task\n                ) {\n                    // toast(\"Runners completed a task!\")\n                    return [...prevChallenges, [payload.new.task, payload.new.points, payload.new.status]];\n                }\n                return prevChallenges;\n            });\n\n\n        }).subscribe();\n\n        return () => {\n            supabase.removeChannel(channel);\n        }\n\n    }, []);\n\n    return (\n        <div>\n            <h1 className=\"text-2xl font-bold text-center\">Runners' past challenge</h1>\n            \n\n            {[...allChallenges].reverse().map((challenge, index) => (\n                <div key={index} \n                    className={\n                        (challenge[2] == 1\n                            ? \"bg-green-400\"\n                            : challenge[2] == 2\n                            ? \"bg-yellow-500\"\n                            : \"bg-red-400\") +\n                        \" p-4 rounded-md text-center m-4\"\n                    }\n                >\n                        <h2>{challenge[0]}</h2>\n                        <h2 className=\"font-bold\">{challenge[1]} points</h2>\n                </div>\n            ))}\n        </div>\n    );\n}"],"names":[],"mappings":";;;;AAEA;AAEA;;;AAJA;;;AAWe,SAAS,eAAe,EAAE,YAAY,EAA+C;;IAEhG,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA8B;IAE/E,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAE3C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACN;4CAAiB,CAAA,OAAQ,KAAK,MAAM,KAAK,IAAI,eAAe;;QAChE;mCAAG;QAAC;KAAa;IAEjB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACN,MAAM,UAAU,2HAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,kCAAkC,EAAE,CAAC,oBAAoB;gBACtF,OAAO;gBACP,QAAQ;gBACR,OAAO;YACX;oDAAG,CAAC;oBACA,QAAQ,GAAG,CAAC;wBAAC;oBAAO;oBAEpB,QAAQ,GAAG,CAAC,QAAQ,GAAG;oBAEvB,QAAQ,GAAG,CAAC,MAAM,QAAQ,QAAQ,OAAO,QAAQ,GAAG,CAAC,IAAI,IAAI;oBAG7D;4DAAiB,CAAA;4BACb,IACI,eAAe,MAAM,KAAK,KAC1B,cAAc,CAAC,eAAe,MAAM,GAAG,EAAE,CAAC,EAAE,KAAK,QAAQ,GAAG,CAAC,IAAI,EACnE;gCACE,qCAAqC;gCACrC,OAAO;uCAAI;oCAAgB;wCAAC,QAAQ,GAAG,CAAC,IAAI;wCAAE,QAAQ,GAAG,CAAC,MAAM;wCAAE,QAAQ,GAAG,CAAC,MAAM;qCAAC;iCAAC;4BAC1F;4BACA,OAAO;wBACX;;gBAGJ;mDAAG,SAAS;YAEZ;4CAAO;oBACH,2HAAA,CAAA,UAAQ,CAAC,aAAa,CAAC;gBAC3B;;QAEJ;mCAAG,EAAE;IAEL,qBACI,6LAAC;;0BACG,6LAAC;gBAAG,WAAU;0BAAiC;;;;;;YAG9C;mBAAI;aAAc,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC,WAAW,sBAC1C,6LAAC;oBACG,WACI,CAAC,SAAS,CAAC,EAAE,IAAI,IACX,iBACA,SAAS,CAAC,EAAE,IAAI,IAChB,kBACA,YAAY,IAClB;;sCAGA,6LAAC;sCAAI,SAAS,CAAC,EAAE;;;;;;sCACjB,6LAAC;4BAAG,WAAU;;gCAAa,SAAS,CAAC,EAAE;gCAAC;;;;;;;;mBAXtC;;;;;;;;;;;AAgB1B;GAjEwB;KAAA","debugId":null}},
    {"offset": {"line": 822, "column": 0}, "map": {"version":3,"sources":["file:///Users/deepikadasari/Documents/Abhi/Projects/manhunt/app/realtime/realtime-timeout.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\";\n\nimport supabase from \"../utils/supabase\";\n\nimport type { Session } from '@supabase/supabase-js'\n\n\ntype CurrentTimeoutStreamProps = {\n    timeOutStatusRef: React.RefObject<{ current: number }>;\n    timeOutElapsedTime: number;\n\n};\n\nexport default function CurrentTimeoutStream({ timeOutStatusRef, timeOutElapsedTime }: CurrentTimeoutStreamProps) { \n\n\n    useEffect(() => {\n        const channel = supabase.channel(\"realtimestream:timeout-stream\").on(\"postgres_changes\", {\n            event: \"UPDATE\",\n            schema: \"public\",\n            table: \"hunts\"\n        }, (payload: { new: any }) => {\n            console.log({payload});\n\n            console.log(payload.new);\n\n            location.reload();\n            // alert(currentChallenge[0] + \" has been drawn!\");\n\n        }).subscribe();\n\n        return () => {\n            supabase.removeChannel(channel);\n        }\n\n    }, []);\n\n\n    return (\n        <div>\n            {timeOutStatusRef.current?.current === 1 && (\n            <div className=\"text-center bg-red-400 p-4 rounded-md mb-19 -mt-16 mb-28\">\n                <h1>\n                5 min timeout initiated for vetoing a challenge.\n                Timeout will elapse in {Math.floor((5 * 60 - timeOutElapsedTime) / 60)}m {Math.floor((5 * 60 - timeOutElapsedTime) % 60)}s.\n                </h1>\n            </div>\n            )}\n        </div>\n    );\n}"],"names":[],"mappings":";;;;AAEA;AAEA;;;AAJA;;;AAee,SAAS,qBAAqB,EAAE,gBAAgB,EAAE,kBAAkB,EAA6B;;IAG5G,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0CAAE;YACN,MAAM,UAAU,2HAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,iCAAiC,EAAE,CAAC,oBAAoB;gBACrF,OAAO;gBACP,QAAQ;gBACR,OAAO;YACX;0DAAG,CAAC;oBACA,QAAQ,GAAG,CAAC;wBAAC;oBAAO;oBAEpB,QAAQ,GAAG,CAAC,QAAQ,GAAG;oBAEvB,SAAS,MAAM;gBACf,mDAAmD;gBAEvD;yDAAG,SAAS;YAEZ;kDAAO;oBACH,2HAAA,CAAA,UAAQ,CAAC,aAAa,CAAC;gBAC3B;;QAEJ;yCAAG,EAAE;IAGL,qBACI,6LAAC;kBACI,iBAAiB,OAAO,EAAE,YAAY,mBACvC,6LAAC;YAAI,WAAU;sBACX,cAAA,6LAAC;;oBAAG;oBAEoB,KAAK,KAAK,CAAC,CAAC,IAAI,KAAK,kBAAkB,IAAI;oBAAI;oBAAG,KAAK,KAAK,CAAC,CAAC,IAAI,KAAK,kBAAkB,IAAI;oBAAI;;;;;;;;;;;;;;;;;AAMzI;GArCwB;KAAA","debugId":null}},
    {"offset": {"line": 898, "column": 0}, "map": {"version":3,"sources":["file:///Users/deepikadasari/Documents/Abhi/Projects/manhunt/app/realtime-self/realtime-points.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\";\n\nimport supabase from \"../utils/supabase\";\n\nimport type { Session } from '@supabase/supabase-js'\n\nimport generateChallenge from \"../utils/manhunt\";\n\nimport { toast } from \"sonner\"\n\ntype PointsStreamSelfProps = {\n    selfPoints: number;\n    user: string;\n    challenge: [string, number];\n    timeOutStatus: number;\n    onChallengeChange?: (challenge: [string, number]) => void;\n};\n\nexport default function PointsStreamSelf({ selfPoints, user, challenge, timeOutStatus, onChallengeChange }: PointsStreamSelfProps) { \n    const [points, setPoints] = useState<number>(selfPoints);\n    const [currentChallenge, setCurrentChallenge] = useState<[string, number]>(challenge);\n\n    useEffect(() => {\n        setPoints(selfPoints);\n    }, [selfPoints]);\n\n    useEffect(() => {\n        setCurrentChallenge(challenge);\n    }, [challenge]);\n\n    useEffect(() => {\n        if (onChallengeChange) {\n            onChallengeChange(currentChallenge);\n        }\n      \n    }, [currentChallenge]);\n\n    useEffect(() => {\n        const channel = supabase.channel(\"realtimestream:points-stream-self\").on(\n            \"postgres_changes\",\n            {\n                event: \"*\",\n                schema: \"public\",\n                table: \"points\"\n            },\n            (payload: { new: any }) => {\n                console.log({ payload });\n                console.log(payload.new);\n                console.log(points);\n\n                if (payload.new.user == user) {\n                    setPoints(payload.new.points);\n                    setCurrentChallenge([\"\", 0]);\n                }\n\n                toast(\"Challenge completed! New challenge generated.\");\n            }\n        ).subscribe();\n\n        return () => {\n            channel.unsubscribe();\n        };\n    }, []);\n\n    useEffect(() => {\n        const channel = supabase.channel(\"realtimestream:drawntasks-stream-self-self\").on(\"postgres_changes\", {\n            event: \"INSERT\",\n            schema: \"public\",\n            table: \"drawntasks\"\n        }, (payload: { new: any, old: any, eventType: string }) => {\n            console.log({payload});\n\n            console.log(payload.new);\n\n            console.log(challenge)\n\n            if (payload.new.user == user && payload.new.task != currentChallenge[0]) {\n                setCurrentChallenge([payload.new.task, payload.new.points]);\n            }\n\n            // alert(currentChallenge[0] + \" has been drawn!\");\n\n        }).subscribe();\n\n        return () => {\n            supabase.removeChannel(channel);\n        }\n    }, []);\n\n\n    return (\n        <>\n            <h1 className=\"text-2xl font-bold text-center m-4\">{points} Points</h1>\n            { timeOutStatus == 0 && currentChallenge[0] !== \"\" && (<div className=\"m-4 mt-10\">\n                {currentChallenge[0] != \"\" &&\n                (<>\n                    <div className={\"bg-blue-400 p-4 pt-2 rounded-md text-center mb-4\"}>\n                        <h2>{currentChallenge[0]}</h2>\n                        <h2 className=\"font-bold\">{currentChallenge[1]} points</h2>\n                    </div>\n\n                </>)}\n            </div>\n        )}\n        </>\n    );\n}"],"names":[],"mappings":";;;;AAEA;AAEA;AAMA;;;AAVA;;;;AAoBe,SAAS,iBAAiB,EAAE,UAAU,EAAE,IAAI,EAAE,SAAS,EAAE,aAAa,EAAE,iBAAiB,EAAyB;;IAC7H,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAC7C,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAoB;IAE3E,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACN,UAAU;QACd;qCAAG;QAAC;KAAW;IAEf,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACN,oBAAoB;QACxB;qCAAG;QAAC;KAAU;IAEd,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACN,IAAI,mBAAmB;gBACnB,kBAAkB;YACtB;QAEJ;qCAAG;QAAC;KAAiB;IAErB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACN,MAAM,UAAU,2HAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,qCAAqC,EAAE,CACpE,oBACA;gBACI,OAAO;gBACP,QAAQ;gBACR,OAAO;YACX;sDACA,CAAC;oBACG,QAAQ,GAAG,CAAC;wBAAE;oBAAQ;oBACtB,QAAQ,GAAG,CAAC,QAAQ,GAAG;oBACvB,QAAQ,GAAG,CAAC;oBAEZ,IAAI,QAAQ,GAAG,CAAC,IAAI,IAAI,MAAM;wBAC1B,UAAU,QAAQ,GAAG,CAAC,MAAM;wBAC5B,oBAAoB;4BAAC;4BAAI;yBAAE;oBAC/B;oBAEA,CAAA,GAAA,2IAAA,CAAA,QAAK,AAAD,EAAE;gBACV;qDACF,SAAS;YAEX;8CAAO;oBACH,QAAQ,WAAW;gBACvB;;QACJ;qCAAG,EAAE;IAEL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACN,MAAM,UAAU,2HAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,8CAA8C,EAAE,CAAC,oBAAoB;gBAClG,OAAO;gBACP,QAAQ;gBACR,OAAO;YACX;sDAAG,CAAC;oBACA,QAAQ,GAAG,CAAC;wBAAC;oBAAO;oBAEpB,QAAQ,GAAG,CAAC,QAAQ,GAAG;oBAEvB,QAAQ,GAAG,CAAC;oBAEZ,IAAI,QAAQ,GAAG,CAAC,IAAI,IAAI,QAAQ,QAAQ,GAAG,CAAC,IAAI,IAAI,gBAAgB,CAAC,EAAE,EAAE;wBACrE,oBAAoB;4BAAC,QAAQ,GAAG,CAAC,IAAI;4BAAE,QAAQ,GAAG,CAAC,MAAM;yBAAC;oBAC9D;gBAEA,mDAAmD;gBAEvD;qDAAG,SAAS;YAEZ;8CAAO;oBACH,2HAAA,CAAA,UAAQ,CAAC,aAAa,CAAC;gBAC3B;;QACJ;qCAAG,EAAE;IAGL,qBACI;;0BACI,6LAAC;gBAAG,WAAU;;oBAAsC;oBAAO;;;;;;;YACzD,iBAAiB,KAAK,gBAAgB,CAAC,EAAE,KAAK,oBAAO,6LAAC;gBAAI,WAAU;0BACjE,gBAAgB,CAAC,EAAE,IAAI,oBACvB;8BACG,cAAA,6LAAC;wBAAI,WAAW;;0CACZ,6LAAC;0CAAI,gBAAgB,CAAC,EAAE;;;;;;0CACxB,6LAAC;gCAAG,WAAU;;oCAAa,gBAAgB,CAAC,EAAE;oCAAC;;;;;;;;;;;;;;;;;;;;;AAQvE;GAxFwB;KAAA","debugId":null}},
    {"offset": {"line": 1062, "column": 0}, "map": {"version":3,"sources":["file:///Users/deepikadasari/Documents/Abhi/Projects/manhunt/app/realtime-self/realtime-alltasks.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\";\n\nimport supabase from \"../utils/supabase\";\n\n// import type { Session } from '@supabase/supabase-js'\n\n\nexport default function AllTasksStreamSelf({ theChallenge, user }: { theChallenge: [string, number, number][], user: string }) { \n\n    const [allChallenges, setAllChallenges] = useState<[string, number, number][]>(theChallenge);\n\n\n    useEffect(() => {\n        setAllChallenges(prev => prev.length === 0 ? theChallenge : prev);\n    }, [theChallenge]);\n\n\n    useEffect(() => {\n        const channel = supabase.channel(\"realtimestream:alltasks-stream45\").on(\"postgres_changes\", {\n            event: \"INSERT\",\n            schema: \"public\",\n            table: \"tasks\"\n        }, (payload: { new: any }) => {\n            console.log({payload});\n\n            console.log(payload.new);\n\n            console.log(\"I got something new\");\n\n            if (user == payload.new.user) {\n                console.log(\"Should have added!\");\n                setAllChallenges(prevChallenges => [\n                    ...prevChallenges,\n                    [\n                        String(payload.new.task),\n                        Number(payload.new.points),\n                        Number(payload.new.status)\n                    ]\n                ]);\n            }\n\n        }).subscribe();\n\n        return () => {\n            supabase.removeChannel(channel);\n        }\n\n    }, []);\n\n    return (\n        <div>\n            {[...allChallenges].reverse().map((challenge, index) => (\n            <div\n                key={index}\n                className={\n                    (challenge[2] == 1\n                        ? \"bg-green-400\"\n                        : challenge[2] == 2\n                        ? \"bg-yellow-500\"\n                        : \"bg-red-400\") +\n                    \" p-4 rounded-md text-center m-4\"\n                }\n            >\n                <h2>{challenge[0]}</h2>\n                <h2 className=\"font-bold\">{challenge[1]} points</h2>\n            </div>\n            ))}\n        </div>\n    );\n}"],"names":[],"mappings":";;;;AAEA;AAEA;;;AAJA;;;AASe,SAAS,mBAAmB,EAAE,YAAY,EAAE,IAAI,EAA8D;;IAEzH,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA8B;IAG/E,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;wCAAE;YACN;gDAAiB,CAAA,OAAQ,KAAK,MAAM,KAAK,IAAI,eAAe;;QAChE;uCAAG;QAAC;KAAa;IAGjB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;wCAAE;YACN,MAAM,UAAU,2HAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,oCAAoC,EAAE,CAAC,oBAAoB;gBACxF,OAAO;gBACP,QAAQ;gBACR,OAAO;YACX;wDAAG,CAAC;oBACA,QAAQ,GAAG,CAAC;wBAAC;oBAAO;oBAEpB,QAAQ,GAAG,CAAC,QAAQ,GAAG;oBAEvB,QAAQ,GAAG,CAAC;oBAEZ,IAAI,QAAQ,QAAQ,GAAG,CAAC,IAAI,EAAE;wBAC1B,QAAQ,GAAG,CAAC;wBACZ;oEAAiB,CAAA,iBAAkB;uCAC5B;oCACH;wCACI,OAAO,QAAQ,GAAG,CAAC,IAAI;wCACvB,OAAO,QAAQ,GAAG,CAAC,MAAM;wCACzB,OAAO,QAAQ,GAAG,CAAC,MAAM;qCAC5B;iCACJ;;oBACL;gBAEJ;uDAAG,SAAS;YAEZ;gDAAO;oBACH,2HAAA,CAAA,UAAQ,CAAC,aAAa,CAAC;gBAC3B;;QAEJ;uCAAG,EAAE;IAEL,qBACI,6LAAC;kBACI;eAAI;SAAc,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC,WAAW,sBAC9C,6LAAC;gBAEG,WACI,CAAC,SAAS,CAAC,EAAE,IAAI,IACX,iBACA,SAAS,CAAC,EAAE,IAAI,IAChB,kBACA,YAAY,IAClB;;kCAGJ,6LAAC;kCAAI,SAAS,CAAC,EAAE;;;;;;kCACjB,6LAAC;wBAAG,WAAU;;4BAAa,SAAS,CAAC,EAAE;4BAAC;;;;;;;;eAXnC;;;;;;;;;;AAgBrB;GA9DwB;KAAA","debugId":null}},
    {"offset": {"line": 1169, "column": 0}, "map": {"version":3,"sources":["file:///Users/deepikadasari/Documents/Abhi/Projects/manhunt/app/utils/manhunt.ts"],"sourcesContent":["export default function generateChallenge(){\n    const challenges: [string, number][] = [\n        [\"Get to a place 10 ft or more above the ground, get taggers to agree it is 10ft+, take a picture from the top of it, and send it in the group chat\", 1],\n        [\"Review a nearby structure on video call based on aesthetic, build, appeal, and importance\", 1],\n        [\"Stand still in the exact spot you are in right now without moving for the next 2 minutes\", 2],\n        [\"From the moment you draw this card, you have 1 minute to find as many street signs as you can, video call the whole process, if you find less than 6, then you must autoveto this card and wait 5 minutes to draw another card, each individual sign on a pole counts as a street sign\", 2],\n        [\"Yell HEEEEEELLLLLPPP decided by the taggers in a public place, You must get on video call with one of the taggers to prove you are yelling, the public place does not have to be populated, just a public place, from there you must yell\", 1],\n        [\"FREEEEEEE POIIIIIINT, after informing the taggers you got this card, immediately draw your next card\", 1],\n        [\"Make a shot in a basketball hoop with any item\", 2],\n        [\"Hold a conversation with a stranger for 30 seconds (must be on call for proof)\", 2],\n        [\"Enter any store\", 1],\n        [\"Find an item in a store worth more than 50 dollars and take a picture with it\", 2],\n        \n        [\"Make a stranger laugh, you must prove you made them laugh either with a picture or by getting on call and having the stranger laugh on call\", 3],\n        [\"Go to lynbrook\", 2],\n        [\"You must walk for the next 2 minutes (no running), Facetime as proof\", 2],\n        [\"Bury any treasure, the “treasure” can either be created by you or found on the ground but must be rare and unique, you must bury the treasure more than 4 inches under the ground\", 3],\n        [\"UNLUCKY!!! You must veto this challenge. You may not complete challenges for 5 minutes, after 5 minutes you may draw your next card\", 0],\n        [\"Freestyle a 3 minute long song on a voice call with the taggers\", 1],\n        [\"Get a stranger to say idli to you without saying the word idli at all\", 4],\n        [\"Get into a conversation with a girl you have never met and take a picture with her, the conversation must be at least 30 seconds long and the girl must be aware you are taking the picture\", 5],\n        [\"Take a selfie with the other team, if they do not tag you before you take the selfie then they are frozen for 3 minutes\", 3],\n        [\"Get tagged, you steal the points you gain from whoever tags you, 3 points, if the person tagging you has less than 3 points, you steal only the points they have until they have 0 points\", 3],\n        \n        [\"Find a cool rock and hold it for 3 minutes\", 2],\n        [\"Pick up 5 pieces of litter and throw it away in 5 minutes\", 3],\n        [\"Pee (send a picture right before and right after for proof)\", 2],\n        [\"Win a round of any mobile game, you must take a screenshot and send it in the chat\", 1],\n        [\"Pet a stranger's dog (ask first)\", 1],\n        [\"Fortnite dance around children, there must be children within 30 feet of you and you must do a dance featured in the game fortnite\", 2],\n        [\"Find a pokemon go player currently playing the game, and take a picture of them playing, it can be yourself if you load up pokemon go and play it\", 1],\n        [\"Go drink water (picture required), 0 points, this challenge cannot be vetoed and a new challenge cannot be completed until you complete this challenge\", 0],\n        [\"Do whatever challenge you just did, if you didnt do any challenge yet then skip this card with no consequence\", 1],\n        [\"LUCKKYYYYY taggers must all say all of their school courses for next year, 1 at a time, runner times them, for every 30 seconds they take runner gets 0.5 point\", 1],\n        \n        [\"Must touch a bag of chips, stays in effect until you touch the bag of chips\", 2],\n        [\"Convince someone in dms to say “new fogga” and send screenshot in idli\", 2],\n        [\"Get on facetime with taggers and name songs of a chosen artist, if you name more get 2 points if they name more stand still for 2 min and can't choose another challenge until that time ends\", 2],\n        [\"Roll around in grass (prove on call)\", 1],\n        [\"Sing a full Bruno mars song on call can search up lyrics, if at any point you stop before the end of the song you must restart\", 2],\n        [\"Take a picture with a VTA bus, send proof\", 2],\n        [\"Visit a school\", 1],\n        [\"Find a Porsche and take a picture with it\", 3],\n        [\"LUCKYYY, 2 free points\",2],\n        [\"Run a mile, send Strava or Health app screenshot as proof\", 2],\n        \n        [\"Go to the entrance ramp of a freeway, and take a picture of the sign\", 2],\n        [\"Find a crosswalk with the yellow blinking lights, take a picture\", 2],\n        [\"Visit a fast food restaurant and take a picture of the menu\", 1],\n        [\"Find cans of soup and curl them\", 2],\n        [\"Facetime the taggers and do 20 pushups, you must be on call for the entire duration of the pushups\", 2],\n        [\"Facetime the taggers and name the 50 states alphabetically, if you fail, automatically veto\", 3],\n        [\"Slide down the slide of a play structure\", 2],\n        [\"Find a restaurant with a drive-thru, send picture as proof\", 2],\n        [\"Find a yellow yield sign and take a picture\", 2],\n        [\"Enter a city other than the one you are currently in\", 3],\n\n        [\"Give a hi five to any person not playing the game, send a picture as proof\", 2],\n        \n        // AI generated challenges below\n        [\"Take a picture with a statue or public art installation\", 2],\n        [\"Do 10 jumping jacks in a public place, video required\", 1],\n        [\"Find a playground and go down a slide, send a video\", 2],\n        [\"Draw a chalk drawing on the sidewalk and send a picture\", 2],\n        [\"Find a dog wearing clothes and take a selfie with it\", 3],\n        [\"Find a license plate from another state and send a picture\", 1],\n        [\"Find a flower and give it to a stranger, get a picture\", 2],\n        [\"Find a store employee and ask for their favorite product, video required\", 2],\n        [\"Take a picture with a bicycle (yours or someone else's)\", 1],\n        [\"Find a bridge and walk across it, send proof\", 2],\n        \n        [\"Find a bus stop and wait there for 2 minutes, send proof\", 1],\n        [\"Find a mailbox and take a selfie with it\", 1],\n        [\"Find a sign in a language other than English, send a picture\", 1],\n        [\"Find a person with a pet other than a dog, take a picture\", 2],\n        [\"Find a public staircase and walk up and down, send proof\", 2],\n    ];\n\n\n    const rnum = Math.floor(Math.random() * challenges.length);\n\n    return [String(rnum+1) + \": \" + challenges[rnum][0], challenges[rnum][1]]; \n}\n"],"names":[],"mappings":";;;AAAe,SAAS;IACpB,MAAM,aAAiC;QACnC;YAAC;YAAqJ;SAAE;QACxJ;YAAC;YAA6F;SAAE;QAChG;YAAC;YAA4F;SAAE;QAC/F;YAAC;YAA0R;SAAE;QAC7R;YAAC;YAA6O;SAAE;QAChP;YAAC;YAAwG;SAAE;QAC3G;YAAC;YAAkD;SAAE;QACrD;YAAC;YAAkF;SAAE;QACrF;YAAC;YAAmB;SAAE;QACtB;YAAC;YAAiF;SAAE;QAEpF;YAAC;YAA+I;SAAE;QAClJ;YAAC;YAAkB;SAAE;QACrB;YAAC;YAAwE;SAAE;QAC3E;YAAC;YAAqL;SAAE;QACxL;YAAC;YAAuI;SAAE;QAC1I;YAAC;YAAmE;SAAE;QACtE;YAAC;YAAyE;SAAE;QAC5E;YAAC;YAA+L;SAAE;QAClM;YAAC;YAA2H;SAAE;QAC9H;YAAC;YAA6L;SAAE;QAEhM;YAAC;YAA8C;SAAE;QACjD;YAAC;YAA6D;SAAE;QAChE;YAAC;YAA+D;SAAE;QAClE;YAAC;YAAsF;SAAE;QACzF;YAAC;YAAoC;SAAE;QACvC;YAAC;YAAsI;SAAE;QACzI;YAAC;YAAqJ;SAAE;QACxJ;YAAC;YAA0J;SAAE;QAC7J;YAAC;YAAiH;SAAE;QACpH;YAAC;YAAmK;SAAE;QAEtK;YAAC;YAA+E;SAAE;QAClF;YAAC;YAA0E;SAAE;QAC7E;YAAC;YAAiM;SAAE;QACpM;YAAC;YAAwC;SAAE;QAC3C;YAAC;YAAkI;SAAE;QACrI;YAAC;YAA6C;SAAE;QAChD;YAAC;YAAkB;SAAE;QACrB;YAAC;YAA6C;SAAE;QAChD;YAAC;YAAyB;SAAE;QAC5B;YAAC;YAA6D;SAAE;QAEhE;YAAC;YAAwE;SAAE;QAC3E;YAAC;YAAoE;SAAE;QACvE;YAAC;YAA+D;SAAE;QAClE;YAAC;YAAmC;SAAE;QACtC;YAAC;YAAsG;SAAE;QACzG;YAAC;YAA+F;SAAE;QAClG;YAAC;YAA4C;SAAE;QAC/C;YAAC;YAA8D;SAAE;QACjE;YAAC;YAA+C;SAAE;QAClD;YAAC;YAAwD;SAAE;QAE3D;YAAC;YAA8E;SAAE;QAEjF,gCAAgC;QAChC;YAAC;YAA2D;SAAE;QAC9D;YAAC;YAAyD;SAAE;QAC5D;YAAC;YAAuD;SAAE;QAC1D;YAAC;YAA2D;SAAE;QAC9D;YAAC;YAAwD;SAAE;QAC3D;YAAC;YAA8D;SAAE;QACjE;YAAC;YAA0D;SAAE;QAC7D;YAAC;YAA4E;SAAE;QAC/E;YAAC;YAA2D;SAAE;QAC9D;YAAC;YAAgD;SAAE;QAEnD;YAAC;YAA4D;SAAE;QAC/D;YAAC;YAA4C;SAAE;QAC/C;YAAC;YAAgE;SAAE;QACnE;YAAC;YAA6D;SAAE;QAChE;YAAC;YAA4D;SAAE;KAClE;IAGD,MAAM,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,WAAW,MAAM;IAEzD,OAAO;QAAC,OAAO,OAAK,KAAK,OAAO,UAAU,CAAC,KAAK,CAAC,EAAE;QAAE,UAAU,CAAC,KAAK,CAAC,EAAE;KAAC;AAC7E","debugId":null}},
    {"offset": {"line": 1455, "column": 0}, "map": {"version":3,"sources":["file:///Users/deepikadasari/Documents/Abhi/Projects/manhunt/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 1518, "column": 0}, "map": {"version":3,"sources":["file:///Users/deepikadasari/Documents/Abhi/Projects/manhunt/components/ui/LeafletTracker.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport supabase from \"../../app/utils/supabase\"; // Fixed path to point to app/utils/supabase\n\nconst defaultCenter: [number, number] = [37.3129978, -122.0121823];\nconst defaultZoom = 13;\n\nexport default function LeafletMap() {\n  const [seekerIds, setSeekerIds] = useState<string[]>([]);\n  const [seekerLocations, setSeekerLocations] = useState<\n    { id: string; lat: number; long: number; updated_at: string }[]\n  >([]);\n\n  // Load existing hunt data and user locations on component mount\n  useEffect(() => {\n    async function loadInitialData() {\n      // Get the most recent active hunt\n      const { data: hunts } = await supabase\n        .from(\"hunts\")\n        .select(\"id, runners, hunters, created_at\")\n        .order(\"created_at\", { ascending: false })\n        .limit(1);\n\n      if (hunts && hunts.length > 0 && hunts[0].runners) {\n        const runners = hunts[0].runners;\n        setSeekerIds(runners);\n\n        // Fetch locations for all runners\n        if (runners.length > 0) {\n          const { data: locations } = await supabase\n            .from(\"userLocations\")\n            .select(\"id, lat, long, updated_at\")\n            .in(\"id\", runners);\n          setSeekerLocations(locations || []);\n        }\n      }\n    }\n\n    loadInitialData();\n  }, []);\n\n  // Subscribe to new hunts and update seekers list\n  useEffect(() => {\n    const channel = supabase\n      .channel(\"realtimestream:hunts-stream\")\n      .on(\n        \"postgres_changes\",\n        {\n          event: \"INSERT\",\n          schema: \"public\",\n          table: \"hunts\",\n        },\n        async (payload: { new: any }) => {\n          console.log(\"New hunt inserted:\", payload.new);\n          \n          // Update seekers list when a new hunt is inserted\n          const runners = payload.new.runners || [];\n          setSeekerIds(runners);\n\n          // Fetch their locations immediately\n          if (runners.length > 0) {\n            const { data: locations } = await supabase\n              .from(\"userLocations\")\n              .select(\"id, lat, long, updated_at\")\n              .in(\"id\", runners);\n            setSeekerLocations(locations || []);\n          } else {\n            setSeekerLocations([]);\n          }\n        }\n      )\n      .subscribe();\n\n    return () => {\n      supabase.removeChannel(channel);\n    };\n  }, []);\n\n  // Subscribe to location updates\n  useEffect(() => {\n    const channel = supabase\n      .channel(\"realtimestream:userLocations-stream\")\n      .on(\n        \"postgres_changes\",\n        {\n          event: \"*\", // Listen to all events (INSERT, UPDATE, DELETE)\n          schema: \"public\",\n          table: \"userLocations\",\n        },\n        async (payload: { new: any; old: any; eventType: string }) => {\n          console.log(\"Location update:\", payload);\n          \n          // Only update if the location is for a current seeker\n          if (payload.new && seekerIds.includes(payload.new.id)) {\n            // Refresh all locations for current seekers\n            if (seekerIds.length > 0) {\n              const { data: locations } = await supabase\n                .from(\"userLocations\")\n                .select(\"id, lat, long, updated_at\")\n                .in(\"id\", seekerIds);\n              setSeekerLocations(locations || []);\n            }\n          }\n        }\n      )\n      .subscribe();\n\n    return () => {\n      supabase.removeChannel(channel);\n    };\n  }, [seekerIds]);\n\n  // Leaflet marker icon fix\n  const markerIcon = L.icon({\n    iconUrl: \"https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png\",\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [1, -34],\n    shadowUrl: \"https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png\",\n    shadowSize: [41, 41],\n  });\n\n  console.log(\"Current seeker locations:\", seekerLocations);\n  console.log(\"Current seeker IDs:\", seekerIds);\n\n  return (\n    <MapContainer center={defaultCenter} zoom={defaultZoom} style={{ height: \"450px\", width: \"600px\" }}>\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution=\"&copy; OpenStreetMap contributors\"\n      />\n      {seekerLocations.map((loc) => (\n        <Marker key={loc.id} position={[loc.lat, loc.long]} icon={markerIcon}>\n          <Popup>\n            Seeker: {loc.id}\n            <br />\n            Updated: {new Date(loc.updated_at).toLocaleTimeString()}\n          </Popup>\n        </Marker>\n      ))}\n    </MapContainer>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1711, "column": 0}, "map": {"version":3,"sources":["file:///Users/deepikadasari/Documents/Abhi/Projects/manhunt/app/page.tsx"],"sourcesContent":["\"use client\"\n\n\nimport { useState, useEffect, useRef } from \"react\";\n\nimport supabase from \"./utils/supabase\";\n\nimport RealtimeStream from \"./realtime/realtime-stream\";\n\nimport PointsStream from \"./realtime/realtime-points\";\n\nimport CurrentChallengeStream from \"./realtime/realtime-currentchallenge\";\n\nimport AllTasksStream from \"./realtime/realtime-alltasks\";\n\nimport CurrentTimeoutStream from \"./realtime/realtime-timeout\";\n\nimport PointsStreamSelf from \"./realtime-self/realtime-points\";\n\nimport AllTasksStreamSelf from \"./realtime-self/realtime-alltasks\";\n\nimport type { Session } from '@supabase/supabase-js'\n\nimport generateChallenge from \"./utils/manhunt\";\n\nimport { Button } from \"@/components/ui/button\";\n\nimport { toast } from \"sonner\"\n\nimport LeafletMap from \"@/components/ui/LeafletTracker\";\n\nexport default function HomePage() {\n\n  const [session, setSession] = useState<Session | null>(null);\n  const [hunts, setHunts] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  const [currentChallenge, setCurrentChallenge] = useState<[string, number]>([\"\", 0]);\n\n  const [pastChallenges, setPastChallenges] = useState<[string, number, number][]>([]);\n\n  const [currentPoints, setCurrentPoints] = useState<number>(0);\n\n  const [timeOutStatus, setTimeOutStatus] = useState<number>(0);\n\n  const [lastVetoTime, setLastVetoTime] = useState<Date>(new Date());\n  const [timeOutElapsedTime, setTimeOutElapsedTime] = useState<number>(0);\n\n  const [huntTime, setHuntTime] = useState<number>();\n\n  const timeOutStatusRef = useRef<{ current: number }>({ current: timeOutStatus });\n\n  // Location tracking\n  const [isTrackingLocation, setIsTrackingLocation] = useState(false);\n  const [locationPermission, setLocationPermission] = useState<PermissionState | null>(null);\n\n  // hunter and spectator stuff under here\n  const [everyonePoints, setEveryonePoints] = useState<[string, number][]>([]);\n  const [otherCurrentChallenge, setOtherCurrentChallenge] = useState<[string, number]>([\"\", 0]);\n  const [otherChallenges, setOtherChallenges] = useState<[string, number, number][]>([]);\n\n  function initializeStuff(session: Session | null) {\n\n    setSession(session);\n\n    let recentRunId = 0;\n\n    supabase\n      .from(\"hunts\")\n      .select()\n      .then(async ({ data }) => {\n        const datasorted = data?.sort((a, b) => {\n          if (!a.id || !b.id) {\n            return 0;\n          }\n          return a.id-b.id;\n        });\n\n        setHunts(datasorted ?? []);\n        setLoading(false);\n        console.log(\"Data34: \", datasorted);\n\n        if (datasorted && datasorted.length > 0) {\n          recentRunId = datasorted[datasorted.length - 1].id;\n\n          const { data: huntData } = await supabase\n          .from(\"hunts\")\n          .select()\n          .eq('id', recentRunId);\n\n          console.log(\"Data56: \", huntData);\n\n          if (huntData && huntData[0] && huntData[0].status && huntData[0].status == 1) {\n            setTimeOutStatus(1);\n\n            // figure out how much time is remaining in the timeOut\n\n\n            const currentTime = new Date();\n\n            let useEmail = session?.user.email || \"NULL\";\n            if (!huntData[0].runners.includes(session?.user.email || \"NULL\")) {\n              // you are not a runner\n              useEmail = huntData[0].runners[0];\n            }\n\n            let { data } = await supabase\n              .from(\"tasks\")\n              .select()\n              .eq('user', useEmail || \"NULL\")\n\n            data = data?.sort((a, b) => {\n              if (!a.id || !b.id) {\n                return 0;\n              }\n              return a.id-b.id;\n            }) ?? null;\n\n            console.log(\"Data72: \", data);\n\n            if (data && data.length > 0) {\n              const lastVetoTime1 = new Date(data[data.length - 1].created_at);\n              console.log(\"Data79: \", lastVetoTime);\n\n              const timeDiff = Math.floor((currentTime.valueOf() - lastVetoTime.valueOf()) / 1000);\n\n              setLastVetoTime(lastVetoTime1);\n              setTimeOutElapsedTime(timeDiff);\n            }\n\n            \n          }\n\n\n          if (huntData && huntData[0] && huntData[0].runners && huntData[0].runners[0]) {\n            supabase\n              .from(\"drawntasks\")\n              .select()\n              .eq('user', huntData[0].runners[0])\n              .then(({ data }) => {\n                console.log(\"Data93: \", data);\n\n                if (data && data.length > 0) {\n                  setOtherCurrentChallenge([data[data.length-1].task, data[data.length-1].points]);\n                }\n                \n              });\n\n            supabase\n              .from(\"tasks\")\n              .select()\n              .eq('user', huntData[0].runners[0])\n              .then(({ data }) => {\n                console.log(\"Data59: \", data);\n\n                const datasorted = data?.sort((a, b) => {\n                  if (!a.id || !b.id) {\n                    return 0;\n                  }\n                  return a.id-b.id;\n                });\n\n                if (datasorted && datasorted.length > 0) {\n                  for (let i = 0; i < datasorted.length; i++) {\n                    setOtherChallenges((prev) => [...prev, [datasorted[i].task, datasorted[i].points, datasorted[i].status]]);\n                  }\n                }\n\n              });\n            }\n\n            // supabase\n            //   .from(\"tasks\")\n            //   .select()\n            //   .eq('user', session?.user.email || \"NULL\")\n            //   .then(({ data }) => {\n            //     console.log(\"DataSELFTASKS: \", data);\n\n            //     // if (data && data.length > 0) {\n            //     //   for (let i = 0; i < data.length; i++) {\n            //     //     setOtherChallenges((prev) => [...prev, [data[i].task, data[i].points, data[i].status]]);\n            //     //   }\n            //     // }\n\n            //   });\n            \n        }\n      });\n\n    supabase\n      .from(\"points\")\n      .select()\n      .eq('user', session?.user.email || \"NULL\")\n      .then(({ data }) => {\n        console.log(\"Data11: \", data);\n\n        if (data && data.length > 0) {\n          setCurrentPoints(data[0].points);\n        }\n      });\n\n    supabase\n      .from(\"points\")\n      .select()\n      .then(({ data }) => {\n        console.log(\"Data37: \", data);\n\n        if (data && data.length > 0) {\n          setEveryonePoints(data.map((item: any) => [item.user, item.points]));\n        } else {\n          setEveryonePoints([]);\n        }\n\n        console.log(\"Everyone points: \", everyonePoints);\n      });\n\n\n    supabase\n      .from(\"tasks\")\n      .select()\n      .eq('user', session?.user.email || \"NULL\")\n      .then(({ data }) => {\n        console.log(\"Data22: \", data);\n\n        const datasorted = data?.sort((a, b) => {\n          if (!a.id || !b.id) {\n            return 0;\n          }\n          return a.id-b.id;\n        });\n\n        if (datasorted && datasorted.length > 0) {\n          for (let i = 0; i < datasorted.length; i++) {\n            setPastChallenges((prev) => [...prev, [datasorted[i].task, datasorted[i].points, datasorted[i].status]]);\n          }\n        }\n      });\n\n    supabase\n      .from(\"drawntasks\")\n      .select()\n      .eq('user', session?.user.email || \"NULL\")\n      .then(({ data }) => {\n        console.log(\"Data44: \", data);\n        if (data && data.length > 0) {\n          setCurrentChallenge([data[data.length-1].task, data[data.length-1].points]);\n        }\n      });\n    \n  }\n\n  useEffect(() => {\n    timeOutStatusRef.current.current = timeOutStatus;\n  }, [timeOutStatus]);\n\n  // Auto-start location tracking for runners\n  useEffect(() => {\n    if (session?.user.email && hunts.length > 0) {\n      const currentHunt = hunts[hunts.length - 1];\n      const isRunner = currentHunt?.runners?.includes(session.user.email);\n      \n      if (isRunner && !isTrackingLocation) {\n        console.log('Starting location tracking for runner:', session.user.email);\n        startLocationTracking();\n      } else if (!isRunner && isTrackingLocation) {\n        console.log('Stopping location tracking - user is not a runner');\n        stopLocationTracking();\n      }\n    }\n  }, [session, hunts, isTrackingLocation]);\n\n  const seconds_interval = 0.1 * 1000;\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (timeOutStatusRef.current.current === 1) {\n        const currentTime = new Date();\n        const timeDiff = Math.floor((currentTime.valueOf() - lastVetoTime.valueOf()) / 1000);\n\n        if (timeDiff >= 5 * 60) {\n          setTimeOutStatus(0);\n          setTimeOutElapsedTime(0);\n          revokeVeto();\n        }\n        setTimeOutElapsedTime(timeDiff);\n      }\n    }, seconds_interval);\n    return () => clearInterval(interval);\n  }, [lastVetoTime, seconds_interval]);\n\n\n  const seconds_interval2 = 0.1 * 1000;\n\n  useEffect(() => {\n      const interval = setInterval(() => {\n\n          // console.log(\"Interval running outside\", hunts);\n\n            // Use functional update to always get the latest hunts value\n            setHunts((prevHunts) => {\n              if (prevHunts.length > 0 && prevHunts[prevHunts.length - 1].created_at) {\n                const sT = prevHunts[prevHunts.length - 1].created_at;\n                const startTime = new Date(sT);\n\n                if (startTime) {\n                const currentTime = new Date();\n                const timeDiff = Math.floor((currentTime.valueOf() - startTime.valueOf()) / 1000);\n                // console.log(\"Time diff AHH: \", timeDiff);\n                setHuntTime(timeDiff);\n                }\n              }\n              return prevHunts;\n            });\n\n          // console.log(\"Interval running\");\n\n      }, seconds_interval2);\n      return () => clearInterval(interval);\n  }, [])\n\n  useEffect(() => {\n    let isMounted = true;\n\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      if (isMounted) initializeStuff(session);\n    });\n\n    const {\n      data: { subscription },\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      if (isMounted) initializeStuff(session);\n    });\n\n    return () => {\n      isMounted = false;\n      subscription.unsubscribe();\n    };\n  }, []);\n\n  async function saveDrawnTasks(user: string, task:string, points: number){\n    const { error } = await supabase.from('drawntasks').insert({ user: user, task: task, points: points});\n  }\n\n  async function deleteDrawnTasks(user: string){\n    const response = await supabase.from('drawntasks').delete().eq('user', user)\n  }\n\n  \n  async function revokeVeto() {\n    let recentRunId = hunts[hunts.length - 1].id;\n\n    // if (!hunts[hunts.length - 1].runners?.includes(session?.user.email || \"NULL\")) {\n    //   return;\n    // }\n\n    const { error } = await supabase.from('hunts').update({ status: 0 }).eq('id', recentRunId);\n\n    location.reload();\n  }\n\n\n  function makeChallenge() {\n    const challenge = generateChallenge();\n\n    // Ensure challenge is [string, number]\n    setCurrentChallenge([challenge[0] as string, challenge[1] as number]);\n\n    let i = 0;\n    while (i < hunts[hunts.length - 1].runners.length) {\n      saveDrawnTasks(hunts[hunts.length - 1].runners[i], challenge[0] as string, challenge[1] as number);\n      i += 1;\n    }\n\n  }\n\n  async function upsertPoints(user: string, newPoints: number){\n\n    const { data, error } = await supabase.from('points').select().eq('user', user);\n    console.log(\"Data: \", data);\n\n    let oldPoints = 0;\n\n    if (!data || data.length === 0) {\n      const { error: insertError } = await supabase.from('points').insert({ user: user, points: 0 });\n    } else {\n      oldPoints = data[0].points;\n    }\n    \n    // because we want to trigger the update subscription regardless\n    const { error: updateError } = await supabase.from('points').update({ points: (newPoints + oldPoints) }).eq('user', user);\n  }\n\n  async function saveTask(user: string, task: string, points: number, status: number){\n    const { error } = await supabase.from('tasks').insert({ user: user, task: task, points: points, status: status });\n  }\n\n  function completeChallenge() {\n    if (currentChallenge[0] === \"\") {\n      alert(\"No challenge to complete\");\n      return;\n    }\n\n    // Use functional update to ensure latest value\n    setCurrentPoints((prevPoints: number) => prevPoints + currentChallenge[1]);\n    // setPastChallenges([...pastChallenges, [currentChallenge[0], currentChallenge[1], 1]]);\n\n\n    toast(\"Challenge completed!\");\n\n\n    // saveTask(\"skparab1@gmail.com\", \"do something cool\", 5, 1);\n\n    let i = 0;\n    while (i < hunts[hunts.length - 1].runners.length) {\n      upsertPoints(hunts[hunts.length - 1].runners[i], currentChallenge[1]);\n\n      saveTask(hunts[hunts.length - 1].runners[i], currentChallenge[0], currentChallenge[1], 1);\n      deleteDrawnTasks(hunts[hunts.length - 1].runners[i]);\n\n      i += 1;\n    }\n\n    setCurrentChallenge([\"\", 0]);\n\n    // makeChallenge();\n  }\n\n\n  function skipChallenge() {\n    if (currentChallenge[0] === \"\") {\n      alert(\"No challenge to complete\");\n      return;\n    }\n\n    setCurrentPoints(currentPoints - 1);\n    // setPastChallenges([...pastChallenges, [currentChallenge[0], currentChallenge[1], 1]]);\n\n\n    toast(\"Challenge skipped!\");\n\n\n    // saveTask(\"skparab1@gmail.com\", \"do something cool\", 5, 1);\n\n    let i = 0;\n    while (i < hunts[hunts.length - 1].runners.length) {\n      upsertPoints(hunts[hunts.length - 1].runners[i], -1);\n\n      saveTask(hunts[hunts.length - 1].runners[i], currentChallenge[0], currentChallenge[1], 2);\n      deleteDrawnTasks(hunts[hunts.length - 1].runners[i]);\n\n      i += 1;\n    }\n\n    setCurrentChallenge([\"\", 0]);\n\n    // makeChallenge();\n  }\n\n\n  async function vetoChallenge() {\n    if (currentChallenge[0] === \"\") {\n      alert(\"No challenge to complete\");\n      return;\n    }\n\n    setPastChallenges([...pastChallenges, [currentChallenge[0], currentChallenge[1], 0]]);\n\n    setCurrentChallenge([\"\", 0]);\n\n    toast(\"Challenge vetoed. You must wait 5 minutes to generate a new one.\");\n\n    let i = 0;\n    while (i < hunts[hunts.length - 1].runners.length) {\n      saveTask(hunts[hunts.length - 1].runners[i], currentChallenge[0], currentChallenge[1], 0);\n      deleteDrawnTasks(hunts[hunts.length - 1].runners[i]);\n      \n      i += 1;\n    }\n\n    let recentRunId = hunts[hunts.length - 1].id;\n\n    const { error } = await supabase.from('hunts').update({ status: 1 }).eq('id', recentRunId);\n    \n    setTimeOutStatus(1);\n\n    location.reload();\n  }\n\n\n  // if (!session) {\n  //   location.href = \"/auth\";\n  //   return null;\n  // }\n\n  // Location tracking functions\n  async function updateUserLocation(lat: number, lng: number) {\n    if (!session?.user.email) return;\n\n    const { error } = await supabase\n      .from('userLocations')\n      .upsert({\n        id: session.user.email,\n        lat: lat,\n        long: lng,\n        updated_at: new Date().toISOString()\n      });\n\n    if (error) {\n      console.error('Error updating location:', error);\n    }\n  }\n\n  async function startLocationTracking() {\n    if (!session?.user.email) return;\n\n    // Check if user is a runner in the current hunt\n    const currentHunt = hunts[hunts.length - 1];\n    if (!currentHunt?.runners?.includes(session.user.email)) {\n      console.log('User is not a runner in current hunt');\n      return;\n    }\n\n    if (!navigator.geolocation) {\n      console.error('Geolocation is not supported by this browser');\n      return;\n    }\n\n    // Request location permission\n    try {\n      const permission = await navigator.permissions.query({ name: 'geolocation' as PermissionName });\n      setLocationPermission(permission.state);\n\n      if (permission.state === 'denied') {\n        console.error('Location permission denied');\n        return;\n      }\n\n      setIsTrackingLocation(true);\n\n      // Start watching position\n      const watchId = navigator.geolocation.watchPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          updateUserLocation(latitude, longitude);\n        },\n        (error) => {\n          console.error('Error getting location:', error);\n          setIsTrackingLocation(false);\n        },\n        {\n          enableHighAccuracy: true,\n          timeout: 10000,\n          maximumAge: 30000 // Update every 30 seconds\n        }\n      );\n\n      // Store watch ID for cleanup\n      return () => {\n        navigator.geolocation.clearWatch(watchId);\n        setIsTrackingLocation(false);\n      };\n    } catch (error) {\n      console.error('Error requesting location permission:', error);\n    }\n  }\n\n  async function stopLocationTracking() {\n    setIsTrackingLocation(false);\n  }\n\n  return (\n    <>\n      <div className=\"w-full bg-slate-800 dark:bg-[rgb(20,77,128)] text-white\" style={{ height: \"40px\" }}>\n        <h1 className=\"absolute l-0 m-2\">Manhunt • {session?.user.email}</h1>\n        <Button\n          className=\"absolute right-0 top-0 h-6 bg-blue-400 dark:bg-slate-800 dark:text-slate-200\"\n          style={{ height: \"30px\", margin: \"5px\" }}\n          onClick={() => { window.location.href = \"/auth\"; }}\n        >\n          Menu\n        </Button>\n      </div>\n      {/* <h1 className=\"text-5xl font-bold pt-32\">{String(hunts[hunts.length-1].id)}Jabari</h1> */}\n      <div className=\"grid grid-rows-[20px_1fr_20px] items-center justify-items-center min-h-screen p-8 gap-16 sm:p-20 font-[family-name:var(--font-geist-sans)] bg-stone-300 dark:bg-neutral-900\">\n        <main className=\"flex flex-col gap-[32px] row-start-2 items-center sm:items-start\">\n\n          {!session ? (\n            <Button onClick={() => { window.location.href = \"/auth\"; }}>Authenticate</Button>\n          ) : (\n\n            <>\n              {hunts[hunts.length-1] == undefined ? (\n                <h1 className=\"text-5xl font-bold\">Loading Hunts ...</h1>\n              ) : !hunts[hunts.length-1].runners ? (\n                <>\n                  <h1 className=\"text-5xl font-bold\">Complete!</h1>\n                  <h1 className=\"font-bold\">Runners</h1> \n\n                      {hunts[hunts.length-2].runners.map((runner: string, index: number) => (\n                        runner === session?.user.email ? (\n                          <h2 key={index} className=\"m-0\">You</h2>\n                        ) : (\n                          <h2 key={index} className=\"m-0\">{runner}</h2> \n                        )\n                      ))} \n                  <h1 className=\"font-bold\">have completed their run.</h1>\n                </> \n              ) : null}\n              \n              <div className={(hunts[hunts.length-1] == undefined || !hunts[hunts.length-1].runners) ? 'hidden' : undefined}>  \n            \n                  { (hunts.length == 0 || !hunts[0]) ? (\n                    <h1> No hunts</h1>\n                  ) : (\n                  <>\n                \n                    {session ? (\n\n                    <>\n                      <CurrentTimeoutStream timeOutStatusRef={timeOutStatusRef} timeOutElapsedTime={timeOutElapsedTime} />\n\n                      {!loading && (\n                          <>\n                          <RealtimeStream serverData={hunts ?? []} />\n                          {hunts.length > 0 && !hunts[hunts.length - 1].runners?.includes(session?.user.email || \"NULL\") && (huntTime ?? 0) < (60*30) && (\n                            <>\n                              <PointsStream pointsArr={everyonePoints ?? []} />\n                              <CurrentChallengeStream theChallenge={otherCurrentChallenge ?? []} />\n                              <AllTasksStream theChallenge={otherChallenges ?? []} />\n                            </>\n                          )}\n                          </>\n                      )}\n\n                      {hunts.length > 0 && hunts[hunts.length - 1].runners?.includes(session?.user.email || \"NULL\") && (huntTime ?? 0) < (60*30) && (\n                          <>\n                            <PointsStreamSelf selfPoints={currentPoints} user={session?.user.email || \"NULL\"} challenge={currentChallenge} timeOutStatus={timeOutStatus} onChallengeChange={setCurrentChallenge}/>\n                            {timeOutStatus == 0 && (\n                              <>\n                                { currentChallenge[0] !== \"\" ? (\n                                  <>\n                                    {(huntTime ?? 0) > (60*3) && (\n                                      <div className=\"flex gap-[24px] flex-wrap items-center justify-center\">\n                                        <Button className=\"bg-green-400\" onClick={completeChallenge}>\n                                          Complete\n                                        </Button>\n                                        <Button className=\"bg-yellow-400\" onClick={skipChallenge}>\n                                          Skip\n                                        </Button>\n                                        <Button className=\"bg-red-400\" onClick={vetoChallenge}>\n                                          Veto\n                                        </Button>\n                                      </div>\n                                    )}\n                                  </>\n                                ) : (\n                                  <div className=\"text-center\">\n                                    <Button className=\"bg-blue-400\" onClick={makeChallenge}>\n                                      Generate Challenge\n                                    </Button>\n                                  </div>\n                                )}\n                              </>\n                            )}\n\n                            <h1 className=\"text-2xl font-bold text-center m-4 mt-8\">\n                              Past Challenges\n                            </h1>\n\n                            <AllTasksStreamSelf theChallenge={pastChallenges} user={session?.user.email || \"NULL\"}/>\n                          </>\n                      )}\n\n                    </>) : (\n                      <Button onClick={() => { window.location.href = \"/auth\"; }}>Authenticate</Button>\n                    )}\n                  </>\n                  )}\n              </div>   \n            \n            </>\n          )}\n          <LeafletMap/>\n        </main>\n        <footer className=\"row-start-3 flex gap-[24px] flex-wrap items-center justify-center\">\n          \n        </footer>\n      </div>\n    </>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}}]
}